I"µ;<p>This is kind of post that I‚Äôm still thinking why I did that ü§î. But remember that not every line of code should be serious. Keep it fun! üéô</p>

<p>Let‚Äôs make <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Rick Astley sing ‚ÄúNever Gonna Give You Up‚Äù</a> in console.</p>

<!--more-->

<h3 id="step-first--video">Step first ‚Äî Video</h3>

<p>I assume that you already have some .mp4 file. If not, you can use <code class="language-plaintext highlighter-rouge">pytube</code>. Check out a snippet:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pytube</span>

<span class="k">class</span> <span class="nc">YT_video</span><span class="p">():</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">url</span> <span class="o">=</span> <span class="n">url</span>
        <span class="n">youtube</span> <span class="o">=</span> <span class="n">pytube</span><span class="p">.</span><span class="n">YouTube</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">url</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">video</span> <span class="o">=</span> <span class="n">youtube</span><span class="p">.</span><span class="n">streams</span><span class="p">.</span><span class="n">get_highest_resolution</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">download</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">dest_folder</span> <span class="o">=</span> <span class="s">'downloads'</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">video</span><span class="p">.</span><span class="n">download</span><span class="p">(</span><span class="n">dest_folder</span><span class="p">)</span>

</code></pre></div></div>

<h3 id="read-file-and-display-it-with-opencv">Read file and display it with OpenCV</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">video</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="n">video_path</span><span class="p">)</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">_</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">video</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">"video"</span><span class="p">,</span> <span class="n">frame</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">"q"</span><span class="p">):</span>
        <span class="k">break</span>

<span class="n">video</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<p>Ok now we have our core. We play video, but there is no sound, it is playing to fast and our goal is to have it in console.</p>

<p>Let‚Äôs solve those problems one by one.</p>

<h3 id="sound">Sound</h3>

<p>You can use <code class="language-plaintext highlighter-rouge">ffpyplayer</code> package. I added to our code next part for handling sound. It‚Äôs only music player that will start song in the background.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">video</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="n">video_path</span><span class="p">)</span>
<span class="n">music_player</span> <span class="o">=</span> <span class="n">MediaPlayer</span><span class="p">(</span><span class="n">video_path</span><span class="p">)</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">_</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">video</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">"video"</span><span class="p">,</span> <span class="n">frame</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">"q"</span><span class="p">):</span>
        <span class="k">break</span>

<span class="n">video</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<p>But wait, Rick is dancing twice as fast as sings. That is not spreading joy ü§î.</p>

<h3 id="speed">Speed</h3>

<p>To know FPS (Frames Per Second) we will use OpenCV. First we calculate how long should one frame last. Then we will wait a bit before displaying next one.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fps</span> <span class="o">=</span> <span class="n">video</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">CAP_PROP_FPS</span><span class="p">)</span>
<span class="n">seconds_per_frame</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="n">fps</span>
</code></pre></div></div>

<p>Now add small wait in the end of out While.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">video</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="n">video_path</span><span class="p">)</span>
<span class="n">music_player</span> <span class="o">=</span> <span class="n">MediaPlayer</span><span class="p">(</span><span class="n">video_path</span><span class="p">)</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">frame_t_start</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>

    <span class="n">_</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">video</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">"video"</span><span class="p">,</span> <span class="n">frame</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">"q"</span><span class="p">):</span>
        <span class="k">break</span>

    <span class="k">while</span> <span class="p">(</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">frame_t_start</span> <span class="p">)</span> <span class="o">&lt;</span> <span class="n">seconds_per_frame</span><span class="p">:</span>
        <span class="k">pass</span>

<span class="n">video</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="to-console">To Console!</h3>

<p>Before we print it to console, we need to make our video grayscale. Use below to change frame. I‚Äôve added some threshold to make it more ‚Äòbinary‚Äô for console. You can play with values <code class="language-plaintext highlighter-rouge">treshold</code> and <code class="language-plaintext highlighter-rouge">treshold_type</code>. Check <a href="https://docs.opencv.org/master/d7/d4d/tutorial_py_thresholding.html">docs</a> of OpenCV to read more.</p>

<p>I set my <code class="language-plaintext highlighter-rouge">treshold_type</code> for 3 and <code class="language-plaintext highlighter-rouge">treshold</code> around 120.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">frame</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
<span class="n">_</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">threshold</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">treshold</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="n">treshold_type</span> <span class="p">)</span>

</code></pre></div></div>

<p>Now our image is a 2D matrix of numbers. We will replace every number with some character. Assuming that our grayscale is from 0 to 255, find a char that suits perfect.</p>

<p>Assume that our grayscale is such string:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">GRAY_SCALE</span> <span class="o">=</span> <span class="s">"@$#*!=;:~-,. "</span>
</code></pre></div></div>

<p>Method for mapping number to char will be:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">def</span> <span class="nf">grayScaleNumber</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
    <span class="n">scale_size</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">GRAY_SCALE</span><span class="p">)</span>
    <span class="n">index</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">num</span> <span class="o">/</span> <span class="mi">255</span><span class="p">)</span> <span class="o">*</span> <span class="n">scale_size</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">GRAY_SCALE</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>

</code></pre></div></div>

<p>Let‚Äôs add simple print method instead of <code class="language-plaintext highlighter-rouge">cv2.imshow("video",frame)</code>.</p>

<p>One more thing here is to resize the video. OpenCV can handle it for us.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">printFrameInConsole</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">):</span>
    <span class="n">console_out_dim</span> <span class="o">=</span> <span class="p">(</span> <span class="nb">int</span><span class="p">(</span><span class="n">width</span> <span class="o">/</span> <span class="n">SCALE</span><span class="p">),</span><span class="nb">int</span><span class="p">(</span><span class="n">height</span> <span class="o">/</span> <span class="n">SCALE</span><span class="p">))</span>
    <span class="n">frame</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">console_out_dim</span><span class="p">,</span> <span class="n">interpolation</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">INTER_AREA</span><span class="p">)</span>

    <span class="n">to_print</span> <span class="o">=</span> <span class="s">''</span>
    <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">frame</span><span class="p">:</span>
        <span class="n">to_print</span> <span class="o">+=</span> <span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">([</span> <span class="n">grayScaleNumber</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">row</span><span class="p">.</span><span class="n">tolist</span><span class="p">()])</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span>

    <span class="n">sys</span><span class="p">.</span><span class="n">stdout</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">to_print</span><span class="p">)</span>
    <span class="n">sys</span><span class="p">.</span><span class="n">stdout</span><span class="p">.</span><span class="n">flush</span><span class="p">()</span>

</code></pre></div></div>

<h3 id="enjoy">Enjoy</h3>

<p>Remember to play with it a bit. Check out some different thresholds and threshold types. Find the best Rick Astley for yourself.</p>

<p>I will upload some video as soon as I can. Now admire console <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Rick</a> üòÖ</p>

<p><img src="https://github.com/JakubSzwajka/JakubSzwajka.github.io/blob/master/_posts/_images/Rick_Astley_1.png?raw=true" alt="Rick_astley" /></p>

<p>Inspired by <a href="https://www.reddit.com/r/programming/comments/mt9lmv/i_played_rick_astley_never_give_you_up_in_console/">PLED</a>.</p>
:ET